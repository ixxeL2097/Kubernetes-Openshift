#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log /dev/log local2
    log /dev/log local1 notice

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    #stats socket /run/haproxy/admin.sock mode 660 level admin
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    tcp
    log                     global
    option                  tcplog
#    option                  dontlognull
#    option http-server-close
#    option forwardfor       except 127.0.0.0/8
#    option                  redispatch
#    retries                 3
#    timeout http-request    10s
#    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
#    timeout http-keep-alive 10s
#    timeout check           10s
#    maxconn                 3000

#---------------------------
# KUBERNETES CONFIG
#---------------------------

frontend http-frontend
    bind *:80
    default_backend http-backend

backend http-backend
   balance roundrobin
   #  31953 is the "NodePort" of Ingress HTTP Service
   server worker1 192.168.0.151:31953 check
   server worker2 192.168.0.152:31953 check

frontend https-frontend
    bind *:443
    default_backend https-backend

backend https-backend
   balance roundrobin
   # 32755 is the "NodePort" of Ingress HTTPS Service
   server worker1 192.168.0.151:32755 check
   server worker2 192.168.0.152:32755 check